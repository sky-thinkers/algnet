<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (1,111,111,100 samples, 0.40%)</title><rect x="1129.9" y="389" width="4.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1132.92" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (212,121,210 samples, 0.08%)</title><rect x="1045.7" y="341" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1048.74" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="351.5" ></text>
</g>
<g >
<title>YAML::ScanScalar[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.57" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="817.4" y="197" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.44" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,808,080,790 samples, 0.66%)</title><rect x="976.8" y="389" width="7.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="979.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="1102.2" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.19" y="287.5" ></text>
</g>
<g >
<title>sim::write_to_csv (156,595,958,030 samples, 56.83%)</title><rect x="83.8" y="453" width="670.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="86.79" y="463.5" >sim::write_to_csv</text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,434,340 samples, 0.12%)</title><rect x="991.1" y="357" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (505,050,500 samples, 0.18%)</title><rect x="12.2" y="437" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.16" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1176.6" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.63" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="453" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.39" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1180.9" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1183.87" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1025.2" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.20" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="303.5" ></text>
</g>
<g >
<title>malloc (9,505,050,410 samples, 3.45%)</title><rect x="221.9" y="421" width="40.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="224.86" y="431.5" >mal..</text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1127.9" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.93" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="335.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (50,505,050 samples, 0.02%)</title><rect x="1034.8" y="373" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1037.84" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="437" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.39" y="447.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (30,303,030 samples, 0.01%)</title><rect x="1050.1" y="437" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1053.07" y="447.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (1,373,737,360 samples, 0.50%)</title><rect x="1014.0" y="421" width="5.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1016.99" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,434,340 samples, 0.12%)</title><rect x="991.1" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.11" y="335.5" ></text>
</g>
<g >
<title>sim::RoundRobinMPLB::select_flow (60,606,060 samples, 0.02%)</title><rect x="1038.9" y="357" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1041.91" y="367.5" ></text>
</g>
<g >
<title>sim::Event::get_time (40,404,040 samples, 0.01%)</title><rect x="821.2" y="469" width="0.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="824.16" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.07%)</title><rect x="83.0" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.97" y="255.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (222,222,220 samples, 0.08%)</title><rect x="1184.5" y="421" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1187.51" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="902.4" y="421" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.35" y="431.5" ></text>
</g>
<g >
<title>operator new (212,121,210 samples, 0.08%)</title><rect x="1128.2" y="389" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.23" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1176.8" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.76" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::export_metrics_to_files (188,919,190,030 samples, 68.56%)</title><rect x="10.5" y="485" width="809.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.52" y="495.5" >sim::MetricsCollector::export_metrics_to_files</text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1018.9" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.93" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,787,878,760 samples, 1.01%)</title><rect x="717.5" y="405" width="11.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="720.48" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (181,818,180 samples, 0.07%)</title><rect x="754.4" y="453" width="0.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="757.38" y="463.5" ></text>
</g>
<g >
<title>cfree (1,888,888,870 samples, 0.69%)</title><rect x="894.6" y="453" width="8.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="897.61" y="463.5" ></text>
</g>
<g >
<title>sim::Host::send_packet (2,616,161,590 samples, 0.95%)</title><rect x="1172.0" y="437" width="11.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1175.01" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,888,888,800 samples, 3.23%)</title><rect x="224.5" y="405" width="38.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="227.50" y="415.5" >[li..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="287.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (444,444,440 samples, 0.16%)</title><rect x="941.2" y="389" width="1.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="944.20" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.11%)</title><rect x="1076.3" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.33" y="319.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.02%)</title><rect x="1023.9" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1026.86" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1062.3" y="389" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.31" y="399.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (606,060,600 samples, 0.22%)</title><rect x="750.4" y="421" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="753.40" y="431.5" ></text>
</g>
<g >
<title>sim::Switch::notify_about_arrival (1,898,989,880 samples, 0.69%)</title><rect x="944.2" y="421" width="8.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="947.22" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="271.5" ></text>
</g>
<g >
<title>malloc (212,121,210 samples, 0.08%)</title><rect x="1128.2" y="373" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1131.23" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="261" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1172.2" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.22" y="431.5" ></text>
</g>
<g >
<title>cfree (282,828,280 samples, 0.10%)</title><rect x="994.5" y="389" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="997.53" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketReordering::add_record (1,626,262,610 samples, 0.59%)</title><rect x="1026.8" y="389" width="7.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1029.80" y="399.5" ></text>
</g>
<g >
<title>__munmap (111,111,110 samples, 0.04%)</title><rect x="937.5" y="357" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="940.52" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,727,272,580 samples, 5.34%)</title><rect x="15.1" y="421" width="63.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.15" y="431.5" >[libc...</text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (1,111,111,100 samples, 0.40%)</title><rect x="958.4" y="437" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="961.37" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="357" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="367.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (161,616,160 samples, 0.06%)</title><rect x="1011.7" y="437" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1014.75" y="447.5" ></text>
</g>
<g >
<title>sim::Scheduler::get_current_time (181,818,180 samples, 0.07%)</title><rect x="953.0" y="437" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="956.05" y="447.5" ></text>
</g>
<g >
<title>__uselocale@plt (131,313,130 samples, 0.05%)</title><rect x="715.8" y="405" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="718.79" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,747,474,600 samples, 5.35%)</title><rect x="15.1" y="437" width="63.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.06" y="447.5" >[libc...</text>
</g>
<g >
<title>sim::TcpFlow::send_packet_now (808,080,800 samples, 0.29%)</title><rect x="1183.6" y="437" width="3.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1186.64" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (50,505,050 samples, 0.02%)</title><rect x="1080.0" y="405" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1082.96" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (61,767,676,150 samples, 22.42%)</title><rect x="445.4" y="405" width="264.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="448.36" y="415.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="817.3" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.31" y="271.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (40,404,040 samples, 0.01%)</title><rect x="1059.9" y="421" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1062.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (212,121,210 samples, 0.08%)</title><rect x="413.0" y="421" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="415.96" y="431.5" ></text>
</g>
<g >
<title>strlen@plt (80,808,080 samples, 0.03%)</title><rect x="709.5" y="357" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="712.52" y="367.5" ></text>
</g>
<g >
<title>operator delete (111,111,110 samples, 0.04%)</title><rect x="292.8" y="421" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="295.80" y="431.5" ></text>
</g>
<g >
<title>memchr@plt (80,808,080 samples, 0.03%)</title><rect x="413.9" y="421" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="416.87" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::update (6,252,525,190 samples, 2.27%)</title><rect x="1020.4" y="421" width="26.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1023.44" y="431.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="1076.8" y="245" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.76" y="255.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="1180.9" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1183.87" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1021.5" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1024.48" y="415.5" ></text>
</g>
<g >
<title>operator delete (40,404,040 samples, 0.01%)</title><rect x="1126.1" y="405" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1129.07" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="421" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="431.5" ></text>
</g>
<g >
<title>operator new (80,808,080 samples, 0.03%)</title><rect x="951.4" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="954.36" y="399.5" ></text>
</g>
<g >
<title>brk (90,909,090 samples, 0.03%)</title><rect x="754.4" y="389" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="757.38" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="782.7" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.67" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="652.8" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.81" y="319.5" ></text>
</g>
<g >
<title>_IO_file_open (282,828,280 samples, 0.10%)</title><rect x="782.8" y="373" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="785.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.07%)</title><rect x="991.8" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.80" y="271.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_reordering (484,848,480 samples, 0.18%)</title><rect x="1024.6" y="389" width="2.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1027.64" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1018.8" y="325" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.75" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (3,747,474,710 samples, 1.36%)</title><rect x="1063.9" y="405" width="16.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1066.91" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (595,959,590 samples, 0.22%)</title><rect x="1134.8" y="405" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1137.76" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="389" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="399.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="1036.9" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1039.92" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.11%)</title><rect x="936.2" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.22" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.01%)</title><rect x="1108.1" y="405" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1111.07" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (40,404,040 samples, 0.01%)</title><rect x="1035.9" y="373" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1038.88" y="383.5" ></text>
</g>
<g >
<title>operator new (90,909,090 samples, 0.03%)</title><rect x="1037.3" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1040.31" y="367.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::data[abi:cxx11] (737,373,730 samples, 0.27%)</title><rect x="80.6" y="453" width="3.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="83.64" y="463.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_data_packet (3,373,737,340 samples, 1.22%)</title><rect x="1022.1" y="405" width="14.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1025.08" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.06%)</title><rect x="989.3" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="992.34" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (8,454,545,370 samples, 3.07%)</title><rect x="821.3" y="469" width="36.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="824.34" y="479.5" >sim..</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (404,040,400 samples, 0.15%)</title><rect x="1075.9" y="357" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1078.89" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (1,474,747,460 samples, 0.54%)</title><rect x="931.8" y="373" width="6.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="934.77" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1079.8" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1082.79" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (4,767,676,720 samples, 1.73%)</title><rect x="1060.1" y="421" width="20.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1063.06" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="373" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1077.3" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.28" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1045.5" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1048.53" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="83.6" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.62" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,414,141,370 samples, 1.60%)</title><rect x="797.5" y="341" width="18.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="800.55" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (111,111,110 samples, 0.04%)</title><rect x="1182.3" y="405" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1185.26" y="415.5" ></text>
</g>
<g >
<title>YAML::Load (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1192.52" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="936.8" y="197" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.78" y="207.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_single_ack (2,464,646,440 samples, 0.89%)</title><rect x="1036.5" y="405" width="10.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1039.53" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1189.1" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.13" y="447.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="220.4" y="437" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="223.39" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (30,303,030 samples, 0.01%)</title><rect x="952.9" y="437" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="955.92" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="782.8" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.84" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1018.9" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.93" y="255.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (151,515,150 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.35" y="495.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (81,101,009,290 samples, 29.43%)</title><rect x="394.4" y="437" width="347.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="397.37" y="447.5" >std::ostream&amp; std::ostream::_M_insert&lt;double&gt;</text>
</g>
<g >
<title>sim::SimplePacketQueue::push (141,414,140 samples, 0.05%)</title><rect x="943.6" y="421" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="946.62" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="1102.4" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.41" y="271.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (5,565,656,510 samples, 2.02%)</title><rect x="1113.5" y="421" width="23.8" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1116.48" y="431.5" >s..</text>
</g>
<g >
<title>cfree (6,222,222,160 samples, 2.26%)</title><rect x="300.4" y="405" width="26.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="303.41" y="415.5" >c..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="213" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.13%)</title><rect x="727.9" y="101" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="730.91" y="111.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (171,717,170 samples, 0.06%)</title><rect x="781.2" y="453" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="784.20" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1176.8" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.81" y="159.5" ></text>
</g>
<g >
<title>operator new (313,131,310 samples, 0.11%)</title><rect x="263.3" y="421" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="266.35" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="757.90" y="383.5" ></text>
</g>
<g >
<title>malloc (50,505,050 samples, 0.02%)</title><rect x="1189.1" y="453" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.13" y="463.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (282,828,280 samples, 0.10%)</title><rect x="1025.3" y="373" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1028.33" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,070,707,050 samples, 0.75%)</title><rect x="984.5" y="389" width="8.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="987.54" y="399.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (424,242,420 samples, 0.15%)</title><rect x="392.5" y="437" width="1.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="395.55" y="447.5" ></text>
</g>
<g >
<title>virtual thunk to sim::Switch::process (161,616,160 samples, 0.06%)</title><rect x="1187.8" y="453" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.75" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.08%)</title><rect x="82.8" y="261" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.84" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (414,141,410 samples, 0.15%)</title><rect x="82.0" y="357" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.02" y="367.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (60,606,060 samples, 0.02%)</title><rect x="1019.9" y="421" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1022.88" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (3,121,212,090 samples, 1.13%)</title><rect x="1064.7" y="389" width="13.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1067.69" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::export_to_file (8,646,464,560 samples, 3.14%)</title><rect x="782.4" y="453" width="37.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="785.41" y="463.5" >sim..</text>
</g>
<g >
<title>sim::Simulator::start (86,242,423,380 samples, 31.30%)</title><rect x="819.8" y="485" width="369.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="822.82" y="495.5" >sim::Simulator::start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="817.9" y="117" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.92" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1018.8" y="341" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.75" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="754.5" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.51" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,222,222,210 samples, 0.44%)</title><rect x="328.4" y="437" width="5.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="331.36" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="817.3" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.31" y="287.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (70,707,070 samples, 0.03%)</title><rect x="1038.5" y="357" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1041.48" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="255.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (70,707,070 samples, 0.03%)</title><rect x="1189.7" y="293" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.70" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="993.4" y="405" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="996.45" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (5,757,575,700 samples, 2.09%)</title><rect x="791.9" y="389" width="24.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="794.92" y="399.5" >v..</text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="757.38" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="652.8" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.81" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (60,606,060 samples, 0.02%)</title><rect x="754.9" y="405" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="757.90" y="415.5" ></text>
</g>
<g >
<title>memcpy@plt (161,616,160 samples, 0.06%)</title><rect x="414.2" y="421" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="417.22" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (30,303,030 samples, 0.01%)</title><rect x="995.7" y="421" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="998.74" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (40,404,040 samples, 0.01%)</title><rect x="968.0" y="421" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="970.97" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="191.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (80,808,080 samples, 0.03%)</title><rect x="1187.3" y="453" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1190.27" y="463.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (616,161,610 samples, 0.22%)</title><rect x="990.0" y="373" width="2.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="993.03" y="383.5" ></text>
</g>
<g >
<title>_start (275,535,350,780 samples, 99.99%)</title><rect x="10.1" y="549" width="1179.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.09" y="559.5" >_start</text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.04%)</title><rect x="1176.5" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.55" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="937.7" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.74" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1037.4" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1040.35" y="335.5" ></text>
</g>
<g >
<title>malloc@plt (40,404,040 samples, 0.01%)</title><rect x="220.7" y="437" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="223.74" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="181" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="191.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (90,909,090 samples, 0.03%)</title><rect x="1024.9" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1027.94" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.03%)</title><rect x="327.1" y="405" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="330.06" y="415.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (353,535,350 samples, 0.13%)</title><rect x="1180.7" y="405" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1183.74" y="415.5" ></text>
</g>
<g >
<title>sim::Summary::Summary (50,505,050 samples, 0.02%)</title><rect x="1189.1" y="485" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.13" y="495.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (272,727,270 samples, 0.10%)</title><rect x="419.3" y="421" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="422.28" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="992.0" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.02" y="223.5" ></text>
</g>
<g >
<title>operator new (595,959,590 samples, 0.22%)</title><rect x="1168.7" y="421" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1171.72" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1082.1" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1085.12" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1185.1" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.07" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (50,505,050 samples, 0.02%)</title><rect x="1186.9" y="405" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1189.89" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt;, std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::less&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, sim::LinkQueueType&gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.03%)</title><rect x="10.2" y="453" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.17" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="309" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.11%)</title><rect x="1102.1" y="293" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.15" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,525,252,400 samples, 4.55%)</title><rect x="338.6" y="389" width="53.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="341.61" y="399.5" >[libc..</text>
</g>
<g >
<title>vsnprintf (60,010,100,410 samples, 21.78%)</title><rect x="452.9" y="389" width="257.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="455.89" y="399.5" >vsnprintf</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (171,717,170 samples, 0.06%)</title><rect x="418.5" y="421" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="421.54" y="431.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="975.6" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="978.63" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="782.8" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.84" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="13.8" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.76" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="319.5" ></text>
</g>
<g >
<title>operator delete (131,313,130 samples, 0.05%)</title><rect x="820.6" y="469" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="823.60" y="479.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (101,010,100 samples, 0.04%)</title><rect x="1042.1" y="357" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1045.11" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,020,202,000 samples, 0.73%)</title><rect x="720.8" y="293" width="8.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.77" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1077.3" y="165" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.28" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (292,929,290 samples, 0.11%)</title><rect x="1173.6" y="373" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.65" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (646,464,640 samples, 0.23%)</title><rect x="290.0" y="405" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="293.03" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.07%)</title><rect x="936.7" y="213" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.70" y="223.5" ></text>
</g>
<g >
<title>sim::TcpFlow::send_data (575,757,570 samples, 0.21%)</title><rect x="1039.2" y="357" width="2.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1042.21" y="367.5" ></text>
</g>
<g >
<title>void fmt::v11::detail::parse_format_string&lt;char, fmt::v11::detail::format_handler&lt;char&gt; &gt; (232,323,230 samples, 0.08%)</title><rect x="1181.3" y="389" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1184.26" y="399.5" ></text>
</g>
<g >
<title>malloc (80,808,080 samples, 0.03%)</title><rect x="1129.6" y="357" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1132.57" y="367.5" ></text>
</g>
<g >
<title>__cxa_throw (30,303,030 samples, 0.01%)</title><rect x="1034.9" y="357" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1037.93" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="652.8" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.81" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::EnsureTokensInQueue (40,404,040 samples, 0.01%)</title><rect x="1189.5" y="277" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.52" y="287.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (5,979,797,920 samples, 2.17%)</title><rect x="1082.5" y="405" width="25.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1085.47" y="415.5" >s..</text>
</g>
<g >
<title>memcpy@plt (232,323,230 samples, 0.08%)</title><rect x="708.5" y="341" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="711.53" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="245" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (90,909,090 samples, 0.03%)</title><rect x="1047.2" y="421" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1050.21" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (40,404,040 samples, 0.01%)</title><rect x="782.6" y="389" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="785.62" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1077.3" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.28" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (59,212,120,620 samples, 21.49%)</title><rect x="456.3" y="373" width="253.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="459.31" y="383.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="1077.4" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.36" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="728.9" y="85" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="731.90" y="95.5" ></text>
</g>
<g >
<title>open64 (282,828,280 samples, 0.10%)</title><rect x="782.8" y="357" width="1.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="785.80" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (70,707,070 samples, 0.03%)</title><rect x="1046.8" y="373" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1049.78" y="383.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (90,909,090 samples, 0.03%)</title><rect x="1019.4" y="389" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1022.45" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_sending_quota (50,505,050 samples, 0.02%)</title><rect x="1039.0" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1041.95" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (333,333,330 samples, 0.12%)</title><rect x="936.1" y="309" width="1.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.09" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.06%)</title><rect x="991.9" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.89" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="817.7" y="149" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.66" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="207.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleDocument (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="405" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1192.52" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (454,545,450 samples, 0.16%)</title><rect x="81.8" y="389" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.85" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="405" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (212,121,210 samples, 0.08%)</title><rect x="815.5" y="309" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="818.54" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (292,929,290 samples, 0.11%)</title><rect x="82.5" y="309" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.54" y="319.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (70,707,070 samples, 0.03%)</title><rect x="1177.4" y="373" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1180.41" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (70,707,070 samples, 0.03%)</title><rect x="938.1" y="373" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="941.08" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (414,141,410 samples, 0.15%)</title><rect x="1015.4" y="373" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1018.38" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (50,505,050 samples, 0.02%)</title><rect x="1036.8" y="357" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1039.83" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (151,515,150 samples, 0.05%)</title><rect x="1025.9" y="357" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1028.89" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (313,131,310 samples, 0.11%)</title><rect x="13.0" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.98" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.14%)</title><rect x="12.7" y="357" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.73" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (989,898,980 samples, 0.36%)</title><rect x="1099.5" y="357" width="4.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1102.51" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.19%)</title><rect x="81.6" y="421" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.59" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1022.2" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1025.21" y="399.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="906.4" y="437" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="909.42" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (1,474,747,460 samples, 0.54%)</title><rect x="1071.6" y="373" width="6.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1074.61" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (70,707,070 samples, 0.03%)</title><rect x="993.1" y="373" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="996.10" y="383.5" ></text>
</g>
<g >
<title>cfree (14,757,575,610 samples, 5.36%)</title><rect x="15.0" y="453" width="63.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.02" y="463.5" >cfree</text>
</g>
<g >
<title>cfree (262,626,260 samples, 0.10%)</title><rect x="1078.8" y="373" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1081.83" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (505,050,500 samples, 0.18%)</title><rect x="12.2" y="421" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.16" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="1176.7" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.68" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.14%)</title><rect x="1101.8" y="341" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.76" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,303,030 samples, 0.01%)</title><rect x="1047.1" y="405" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1050.09" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1102.9" y="181" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.93" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (80,808,080 samples, 0.03%)</title><rect x="754.8" y="421" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="757.81" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1103.6" y="325" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1106.62" y="335.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (323,232,320 samples, 0.12%)</title><rect x="707.1" y="341" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="710.14" y="351.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (101,010,100 samples, 0.04%)</title><rect x="957.9" y="437" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="960.89" y="447.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::empty (121,212,120 samples, 0.04%)</title><rect x="996.3" y="437" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="999.35" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="791.1" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="794.06" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (383,838,380 samples, 0.14%)</title><rect x="416.9" y="421" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="419.90" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::get_records (494,949,490 samples, 0.18%)</title><rect x="262.6" y="437" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="265.57" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (373,737,370 samples, 0.14%)</title><rect x="12.7" y="373" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.73" y="383.5" ></text>
</g>
<g >
<title>YAML::LoadFile (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="453" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.52" y="463.5" ></text>
</g>
<g >
<title>nons (275,555,552,800 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >nons</text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.06%)</title><rect x="931.0" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="934.03" y="383.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (40,404,040 samples, 0.01%)</title><rect x="858.5" y="469" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="861.54" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="389" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (353,535,350 samples, 0.13%)</title><rect x="1155.3" y="437" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1158.27" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="1102.4" y="245" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.41" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="10.4" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.39" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1103.6" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1106.62" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (171,717,170 samples, 0.06%)</title><rect x="947.5" y="405" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="950.47" y="415.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet&gt; (434,343,430 samples, 0.16%)</title><rect x="1106.1" y="373" width="1.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1109.13" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="1177.0" y="357" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1179.98" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (40,404,040 samples, 0.01%)</title><rect x="1045.2" y="357" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1048.23" y="367.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="788.3" y="421" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="791.29" y="431.5" ></text>
</g>
<g >
<title>all (275,555,552,800 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>sim::TcpFlow::process_ack (2,191,919,170 samples, 0.80%)</title><rect x="1037.7" y="389" width="9.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1040.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.08%)</title><rect x="817.4" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.36" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="782.9" y="197" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.93" y="207.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (101,010,100 samples, 0.04%)</title><rect x="1177.9" y="421" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1180.89" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="325" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.11%)</title><rect x="1076.3" y="341" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.33" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,030,303,010 samples, 0.74%)</title><rect x="720.7" y="309" width="8.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.73" y="319.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="716.4" y="405" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="719.36" y="415.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (171,717,170 samples, 0.06%)</title><rect x="1112.5" y="421" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1115.49" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,636,363,590 samples, 1.68%)</title><rect x="1084.7" y="389" width="19.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1087.67" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.19%)</title><rect x="727.2" y="117" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="730.21" y="127.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_instance (30,303,030 samples, 0.01%)</title><rect x="1078.1" y="389" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1081.06" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="287.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (1,171,717,160 samples, 0.43%)</title><rect x="1172.8" y="421" width="5.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1175.78" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1025.2" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.20" y="271.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (74,050,504,310 samples, 26.87%)</title><rect x="424.6" y="421" width="317.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="427.56" y="431.5" >std::ostreambuf_iterator&lt;char, std::char_t..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.08%)</title><rect x="817.4" y="245" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.36" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.14%)</title><rect x="935.8" y="325" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="938.83" y="335.5" ></text>
</g>
<g >
<title>sim::Link::start_head_packet_sending (858,585,850 samples, 0.31%)</title><rect x="1108.4" y="421" width="3.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1111.38" y="431.5" ></text>
</g>
<g >
<title>sim::TcpFlow::get_id[abi:cxx11] (181,818,180 samples, 0.07%)</title><rect x="1129.1" y="389" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1132.14" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1025.2" y="277" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.20" y="287.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;, std::weak_ptr&lt;sim::IProcessingDevice&gt;&amp;&gt; (3,111,111,080 samples, 1.13%)</title><rect x="1157.9" y="437" width="13.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1160.95" y="447.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1047.0" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.96" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2,575,757,550 samples, 0.93%)</title><rect x="1143.0" y="421" width="11.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.98" y="431.5" ></text>
</g>
<g >
<title>YAML::Scanner::empty (40,404,040 samples, 0.01%)</title><rect x="1189.5" y="293" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.52" y="303.5" ></text>
</g>
<g >
<title>sim::SendData::operator (70,707,070 samples, 0.03%)</title><rect x="1188.5" y="469" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1191.49" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="341" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (292,929,290 samples, 0.11%)</title><rect x="782.8" y="437" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="785.80" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,181,818,170 samples, 0.43%)</title><rect x="724.4" y="165" width="5.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="727.36" y="175.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (30,303,030 samples, 0.01%)</title><rect x="1112.3" y="421" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1115.27" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,080,808,060 samples, 0.76%)</title><rect x="720.5" y="357" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.51" y="367.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (464,646,460 samples, 0.17%)</title><rect x="414.9" y="421" width="2.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="417.91" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="754.5" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.51" y="159.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::confirm_one (222,222,220 samples, 0.08%)</title><rect x="1036.7" y="389" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1039.75" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (505,050,500 samples, 0.18%)</title><rect x="12.2" y="453" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.16" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="239.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (575,757,570 samples, 0.21%)</title><rect x="1132.2" y="373" width="2.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1135.21" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="207.5" ></text>
</g>
<g >
<title>__munmap (80,808,080 samples, 0.03%)</title><rect x="10.2" y="437" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="245" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1176.6" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.59" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1044.4" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1047.36" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="818.0" y="101" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.96" y="111.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (80,808,080 samples, 0.03%)</title><rect x="1014.6" y="389" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1017.56" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="325" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="335.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (4,101,010,060 samples, 1.49%)</title><rect x="975.9" y="405" width="17.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="978.89" y="415.5" ></text>
</g>
<g >
<title>std::ostream::put (111,111,110 samples, 0.04%)</title><rect x="781.9" y="453" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="784.93" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (30,303,030 samples, 0.01%)</title><rect x="788.1" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="791.12" y="431.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (272,727,270 samples, 0.10%)</title><rect x="1185.7" y="405" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1188.72" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="300.3" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="303.29" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="341" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.08%)</title><rect x="1076.7" y="277" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.71" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,040,404,020 samples, 0.74%)</title><rect x="720.7" y="341" width="8.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.68" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="991.4" y="309" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.37" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,898,989,880 samples, 0.69%)</title><rect x="721.3" y="229" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.29" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="937.1" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.13" y="175.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.01%)</title><rect x="1185.5" y="405" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1188.54" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (181,818,180 samples, 0.07%)</title><rect x="452.1" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="455.11" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="782.8" y="325" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.80" y="335.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (353,535,350 samples, 0.13%)</title><rect x="956.4" y="437" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="959.38" y="447.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (90,909,090 samples, 0.03%)</title><rect x="1103.7" y="357" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1106.75" y="367.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_RTT (444,444,440 samples, 0.16%)</title><rect x="1041.9" y="373" width="1.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1044.89" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.14%)</title><rect x="12.7" y="405" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,919,190 samples, 0.07%)</title><rect x="13.5" y="293" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.50" y="303.5" ></text>
</g>
<g >
<title>vsnprintf@plt (40,404,040 samples, 0.01%)</title><rect x="741.5" y="405" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="744.49" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (70,707,070 samples, 0.03%)</title><rect x="859.8" y="469" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="862.83" y="479.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (474,747,470 samples, 0.17%)</title><rect x="961.1" y="405" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="964.05" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1111.0" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1113.97" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="341" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="351.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="325" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="894.4" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.39" y="463.5" ></text>
</g>
<g >
<title>writev (30,303,030 samples, 0.01%)</title><rect x="785.6" y="405" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="788.56" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (60,606,060 samples, 0.02%)</title><rect x="1036.3" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1039.27" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="729.2" y="69" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="732.20" y="79.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (787,878,780 samples, 0.29%)</title><rect x="726.0" y="133" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="729.05" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="1103.1" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.10" y="159.5" ></text>
</g>
<g >
<title>operator new (111,111,110 samples, 0.04%)</title><rect x="1107.5" y="357" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.51" y="367.5" ></text>
</g>
<g >
<title>sim::Link::schedule_arrival (6,515,151,450 samples, 2.36%)</title><rect x="1080.5" y="421" width="27.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1083.48" y="431.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,606,060 samples, 0.02%)</title><rect x="783.7" y="69" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.75" y="79.5" ></text>
</g>
<g >
<title>malloc (40,404,040 samples, 0.01%)</title><rect x="1181.0" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1184.00" y="383.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt; (7,696,969,620 samples, 2.79%)</title><rect x="786.3" y="437" width="33.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="789.34" y="447.5" >st..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,323,232,310 samples, 0.48%)</title><rect x="729.4" y="405" width="5.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="732.42" y="415.5" ></text>
</g>
<g >
<title>vsnprintf (40,404,040 samples, 0.01%)</title><rect x="819.1" y="405" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="822.09" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (999,999,990 samples, 0.36%)</title><rect x="1015.1" y="389" width="4.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1018.12" y="399.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="960.5" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="963.53" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,585,858,530 samples, 2.03%)</title><rect x="792.7" y="373" width="23.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="795.66" y="383.5" >[..</text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1040.3" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.34" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.01%)</title><rect x="755.0" y="389" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="758.03" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::FlagInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (40,404,040 samples, 0.01%)</title><rect x="1035.7" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1038.71" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="992.3" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.28" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (949,494,940 samples, 0.34%)</title><rect x="725.4" y="149" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="728.35" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.04%)</title><rect x="1034.4" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1037.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="992.0" y="229" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.02" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (90,909,090 samples, 0.03%)</title><rect x="754.8" y="437" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="757.77" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.07%)</title><rect x="83.0" y="229" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.01" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (45,383,837,930 samples, 16.47%)</title><rect x="512.8" y="341" width="194.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="515.80" y="351.5" >[libc.so.6]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (434,343,430 samples, 0.16%)</title><rect x="81.9" y="373" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.93" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (525,252,520 samples, 0.19%)</title><rect x="1174.9" y="373" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1177.90" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (858,585,850 samples, 0.31%)</title><rect x="971.4" y="421" width="3.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="974.43" y="431.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (60,606,060 samples, 0.02%)</title><rect x="818.8" y="405" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="821.78" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="373" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (121,212,120 samples, 0.04%)</title><rect x="13.8" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.81" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,757,575,710 samples, 1.73%)</title><rect x="796.2" y="357" width="20.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="799.21" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,555,555,540 samples, 0.56%)</title><rect x="722.8" y="197" width="6.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="725.76" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="357" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (292,929,290 samples, 0.11%)</title><rect x="1154.0" y="421" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1157.01" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (252,525,250 samples, 0.09%)</title><rect x="753.0" y="437" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="755.99" y="447.5" ></text>
</g>
<g >
<title>__munmap (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="341" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1106.40" y="351.5" ></text>
</g>
<g >
<title>YAML::Parser::HandleNextDocument (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="421" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.52" y="431.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::~Arrive (40,404,040 samples, 0.01%)</title><rect x="953.8" y="453" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="956.83" y="463.5" ></text>
</g>
<g >
<title>main (275,434,340,680 samples, 99.96%)</title><rect x="10.5" y="501" width="1179.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.52" y="511.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.10%)</title><rect x="782.9" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.88" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1025.2" y="293" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,303,030 samples, 0.01%)</title><rect x="781.1" y="453" width="0.1" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="784.07" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="783.0" y="181" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.97" y="191.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (282,828,280 samples, 0.10%)</title><rect x="782.8" y="421" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="785.80" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="971.6" y="405" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="974.65" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (252,525,250 samples, 0.09%)</title><rect x="13.2" y="309" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.24" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="261" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="783.6" y="85" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.62" y="95.5" ></text>
</g>
<g >
<title>__libc_start_main (275,535,350,780 samples, 99.99%)</title><rect x="10.1" y="533" width="1179.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.09" y="543.5" >__libc_start_main</text>
</g>
<g >
<title>cfree (5,202,020,150 samples, 1.89%)</title><rect x="270.5" y="421" width="22.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="273.53" y="431.5" >c..</text>
</g>
<g >
<title>sim::Link::Transmit::operator (10,010,100,910 samples, 3.63%)</title><rect x="954.0" y="453" width="42.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="957.00" y="463.5" >sim:..</text>
</g>
<g >
<title>writev (252,525,250 samples, 0.09%)</title><rect x="817.2" y="389" width="1.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="820.23" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,181,818,170 samples, 0.43%)</title><rect x="897.6" y="437" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.64" y="447.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (40,404,040 samples, 0.01%)</title><rect x="938.9" y="389" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="941.95" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (275,535,350,780 samples, 99.99%)</title><rect x="10.1" y="517" width="1179.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.09" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="754.9" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="757.90" y="399.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (393,939,390 samples, 0.14%)</title><rect x="420.4" y="421" width="1.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="423.45" y="431.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (76,171,716,410 samples, 27.64%)</title><rect x="862.3" y="469" width="326.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="865.30" y="479.5" >sim::Scheduler::tick</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="83.6" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="86.62" y="207.5" ></text>
</g>
<g >
<title>operator new (222,222,220 samples, 0.08%)</title><rect x="942.1" y="373" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="945.15" y="383.5" ></text>
</g>
<g >
<title>fopen (282,828,280 samples, 0.10%)</title><rect x="782.8" y="405" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="785.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="303.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (11,939,393,820 samples, 4.33%)</title><rect x="902.7" y="453" width="51.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="905.70" y="463.5" >sim::..</text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="1023.9" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1026.86" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.07%)</title><rect x="991.8" y="277" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.80" y="287.5" ></text>
</g>
<g >
<title>sim::ECN::get_congestion_mark (101,010,100 samples, 0.04%)</title><rect x="1002.6" y="437" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1005.62" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (40,404,040 samples, 0.01%)</title><rect x="1042.5" y="357" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1045.54" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1176.9" y="117" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.85" y="127.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="1189.1" y="469" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.13" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="788.5" y="421" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="791.55" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.03%)</title><rect x="1127.2" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.19" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="175.5" ></text>
</g>
<g >
<title>sim::YamlParser::build_simulator_from_config (30,303,030 samples, 0.01%)</title><rect x="1189.4" y="469" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.39" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="357" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.04%)</title><rect x="783.6" y="101" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.57" y="111.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="783.3" y="133" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.27" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (40,404,040 samples, 0.01%)</title><rect x="1026.5" y="373" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1029.54" y="383.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (50,505,050 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.78" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="1076.8" y="261" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.76" y="271.5" ></text>
</g>
<g >
<title>malloc (70,707,070 samples, 0.03%)</title><rect x="951.4" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="954.40" y="383.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (2,787,878,760 samples, 1.01%)</title><rect x="1092.4" y="373" width="12.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1095.42" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="906.0" y="437" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="909.03" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="937.2" y="149" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.17" y="159.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="309" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="319.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (50,505,050 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.78" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="652.8" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.81" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="287.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (90,909,090 samples, 0.03%)</title><rect x="938.4" y="373" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="941.38" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1042.8" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1045.76" y="351.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (151,515,150 samples, 0.05%)</title><rect x="1044.3" y="357" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1047.32" y="367.5" ></text>
</g>
<g >
<title>sim::Process::~Process (90,909,090 samples, 0.03%)</title><rect x="1171.4" y="453" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1174.36" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="319.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::get_storage_named (30,303,030 samples, 0.01%)</title><rect x="1024.8" y="373" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1027.81" y="383.5" ></text>
</g>
<g >
<title>brk (30,303,030 samples, 0.01%)</title><rect x="754.9" y="341" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="757.90" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.10%)</title><rect x="782.9" y="229" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.88" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (50,505,050 samples, 0.02%)</title><rect x="785.5" y="421" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="788.48" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (262,626,260 samples, 0.10%)</title><rect x="82.7" y="293" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.67" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="341" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="277" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (111,111,110 samples, 0.04%)</title><rect x="1025.4" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1028.41" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (40,404,040 samples, 0.01%)</title><rect x="782.6" y="405" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="785.62" y="415.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_cwnd (313,131,310 samples, 0.11%)</title><rect x="1043.8" y="373" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1046.80" y="383.5" ></text>
</g>
<g >
<title>operator delete (30,303,030 samples, 0.01%)</title><rect x="220.9" y="437" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="223.91" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1077.0" y="213" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.97" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (60,606,060 samples, 0.02%)</title><rect x="909.6" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="912.58" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (787,878,780 samples, 0.29%)</title><rect x="1104.6" y="389" width="3.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1107.61" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.14%)</title><rect x="935.8" y="357" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="938.83" y="367.5" ></text>
</g>
<g >
<title>sim::Switch::process (24,424,242,180 samples, 8.86%)</title><rect x="1050.7" y="437" width="104.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1053.68" y="447.5" >sim::Switch:..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (303,030,300 samples, 0.11%)</title><rect x="817.0" y="405" width="1.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="820.01" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,787,878,770 samples, 0.65%)</title><rect x="721.8" y="213" width="7.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.76" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,939,393,920 samples, 0.70%)</title><rect x="698.8" y="309" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="701.79" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="817.7" y="133" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.75" y="143.5" ></text>
</g>
<g >
<title>malloc (313,131,310 samples, 0.11%)</title><rect x="263.3" y="405" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="266.35" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.19%)</title><rect x="81.6" y="437" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.59" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,080,808,070 samples, 0.39%)</title><rect x="408.3" y="421" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="411.34" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="1077.1" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.06" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (101,010,100 samples, 0.04%)</title><rect x="1022.4" y="389" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1025.43" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="783.8" y="53" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.79" y="63.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (151,515,150 samples, 0.05%)</title><rect x="1111.4" y="389" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1114.36" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="351.5" ></text>
</g>
<g >
<title>operator new (555,555,550 samples, 0.20%)</title><rect x="78.3" y="453" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="81.26" y="463.5" ></text>
</g>
<g >
<title>__uselocale (90,909,090 samples, 0.03%)</title><rect x="816.6" y="405" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="819.58" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="936.3" y="261" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.31" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="309" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (101,010,100 samples, 0.04%)</title><rect x="992.7" y="373" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="995.67" y="383.5" ></text>
</g>
<g >
<title>sim::Process::operator (40,676,767,270 samples, 14.76%)</title><rect x="997.2" y="453" width="174.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1000.17" y="463.5" >sim::Process::operator</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (171,717,170 samples, 0.06%)</title><rect x="1157.2" y="437" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.21" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1025.2" y="341" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.15" y="351.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1023.9" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1026.86" y="367.5" ></text>
</g>
<g >
<title>operator new (40,404,040 samples, 0.01%)</title><rect x="1181.0" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.00" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="782.8" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.84" y="287.5" ></text>
</g>
<g >
<title>malloc (515,151,510 samples, 0.19%)</title><rect x="78.4" y="437" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="81.43" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="1176.6" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.63" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="1018.8" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.75" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.03%)</title><rect x="1185.8" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.76" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (303,030,300 samples, 0.11%)</title><rect x="1056.4" y="421" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1059.43" y="431.5" ></text>
</g>
<g >
<title>malloc (90,909,090 samples, 0.03%)</title><rect x="1037.3" y="341" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1040.31" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="782.7" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.67" y="159.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::~MetricsCollector (90,909,090 samples, 0.03%)</title><rect x="10.1" y="469" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.13" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="319.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::Arrive (373,737,370 samples, 0.14%)</title><rect x="969.8" y="421" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="972.83" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (363,636,360 samples, 0.13%)</title><rect x="443.8" y="405" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="446.81" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1002.3" y="437" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1005.32" y="447.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (353,535,350 samples, 0.13%)</title><rect x="1058.4" y="421" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1061.37" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (232,323,230 samples, 0.08%)</title><rect x="991.6" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.59" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="995.2" y="373" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="998.22" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (80,808,080 samples, 0.03%)</title><rect x="1057.7" y="421" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1060.73" y="431.5" ></text>
</g>
<g >
<title>malloc (222,222,220 samples, 0.08%)</title><rect x="942.1" y="357" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="945.15" y="367.5" ></text>
</g>
<g >
<title>cfree (80,808,080 samples, 0.03%)</title><rect x="1019.5" y="373" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1022.49" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (515,151,510 samples, 0.19%)</title><rect x="81.6" y="405" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.59" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (121,212,120 samples, 0.04%)</title><rect x="1177.2" y="389" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1180.20" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (7,969,696,890 samples, 2.89%)</title><rect x="293.3" y="421" width="34.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="296.28" y="431.5" >st..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (30,303,030 samples, 0.01%)</title><rect x="785.7" y="421" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="788.69" y="431.5" ></text>
</g>
<g >
<title>cfree (90,909,090 samples, 0.03%)</title><rect x="754.4" y="437" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="757.38" y="447.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (40,404,040 samples, 0.01%)</title><rect x="1041.1" y="325" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1044.07" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.14%)</title><rect x="12.7" y="389" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="15.68" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="817.6" y="165" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.57" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.04%)</title><rect x="10.1" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.09" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;Time&lt;Nanosecond&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,696,969,560 samples, 4.97%)</title><rect x="333.6" y="437" width="58.6" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="336.59" y="447.5" >std::_..</text>
</g>
<g >
<title>sim::Link::get_to_ingress_queue_size (90,909,090 samples, 0.03%)</title><rect x="1049.4" y="437" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1052.38" y="447.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (30,303,030 samples, 0.01%)</title><rect x="788.4" y="421" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="791.42" y="431.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (60,606,060 samples, 0.02%)</title><rect x="754.1" y="437" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="757.07" y="447.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::operator (262,626,260 samples, 0.10%)</title><rect x="858.7" y="469" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="861.71" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,636,363,510 samples, 4.59%)</title><rect x="653.0" y="325" width="54.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="655.99" y="335.5" >[libc..</text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (30,303,030 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.87" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (222,222,220 samples, 0.08%)</title><rect x="327.4" y="437" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="330.41" y="447.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (1,151,515,140 samples, 0.42%)</title><rect x="1014.9" y="405" width="4.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1017.90" y="415.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (30,303,030 samples, 0.01%)</title><rect x="1038.8" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1041.78" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (40,404,040 samples, 0.01%)</title><rect x="1045.0" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1047.97" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.05%)</title><rect x="967.4" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="970.37" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="325" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (30,303,030 samples, 0.01%)</title><rect x="392.3" y="437" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="395.33" y="447.5" ></text>
</g>
<g >
<title>sim::Scheduler::tick (70,707,070 samples, 0.03%)</title><rect x="819.5" y="485" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="822.52" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,626,262,610 samples, 0.59%)</title><rect x="1085.5" y="373" width="6.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1088.45" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1025.2" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.15" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.08%)</title><rect x="1076.7" y="293" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.71" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="783.1" y="149" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.14" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (393,939,390 samples, 0.14%)</title><rect x="935.8" y="341" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="938.83" y="351.5" ></text>
</g>
<g >
<title>__default_morecore (30,303,030 samples, 0.01%)</title><rect x="754.9" y="357" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="757.90" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (111,111,110 samples, 0.04%)</title><rect x="952.4" y="421" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="955.36" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="992.4" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.37" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="782.8" y="293" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.84" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="1075.4" y="357" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1078.37" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (80,808,080 samples, 0.03%)</title><rect x="1044.6" y="341" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1047.62" y="351.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (3,515,151,480 samples, 1.28%)</title><rect x="923.7" y="389" width="15.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="926.72" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,030,303,010 samples, 0.74%)</title><rect x="720.7" y="325" width="8.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.73" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (60,606,060 samples, 0.02%)</title><rect x="1182.8" y="421" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1185.82" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="239.5" ></text>
</g>
<g >
<title>_Unwind_RaiseException (30,303,030 samples, 0.01%)</title><rect x="1034.9" y="341" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1037.93" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.14%)</title><rect x="1101.8" y="325" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.76" y="335.5" ></text>
</g>
<g >
<title>sim::load_file (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.52" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="936.5" y="229" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.48" y="239.5" ></text>
</g>
<g >
<title>cfree (60,606,060 samples, 0.02%)</title><rect x="327.1" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="330.15" y="399.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (5,929,292,870 samples, 2.15%)</title><rect x="913.7" y="405" width="25.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="916.73" y="415.5" >s..</text>
</g>
<g >
<title>malloc (12,828,282,700 samples, 4.66%)</title><rect x="337.3" y="405" width="54.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="340.31" y="415.5" >malloc</text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,434,340 samples, 0.12%)</title><rect x="991.1" y="341" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="994.11" y="351.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (414,141,410 samples, 0.15%)</title><rect x="1078.2" y="389" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1081.19" y="399.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::export_to_files (8,666,666,580 samples, 3.15%)</title><rect x="782.4" y="469" width="37.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="785.41" y="479.5" >sim..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.04%)</title><rect x="992.2" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.15" y="207.5" ></text>
</g>
<g >
<title>void sim::Scheduler::add&lt;sim::Process, Time&lt;Nanosecond&gt;&amp;, std::weak_ptr&lt;sim::ISwitch&gt;&amp;&gt; (969,696,960 samples, 0.35%)</title><rect x="948.2" y="405" width="4.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="951.20" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30,303,030 samples, 0.01%)</title><rect x="1046.7" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1049.65" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (30,303,030 samples, 0.01%)</title><rect x="1077.6" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1080.62" y="367.5" ></text>
</g>
<g >
<title>sim::Host::notify_about_arrival (282,828,280 samples, 0.10%)</title><rect x="910.1" y="421" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="913.14" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (101,010,100 samples, 0.04%)</title><rect x="10.1" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.09" y="495.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.6" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.64" y="127.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (565,656,560 samples, 0.21%)</title><rect x="422.1" y="421" width="2.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="425.13" y="431.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (484,848,480 samples, 0.18%)</title><rect x="735.1" y="405" width="2.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="738.09" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,131,310 samples, 0.11%)</title><rect x="263.3" y="389" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="266.35" y="399.5" ></text>
</g>
<g >
<title>sim::LinkQueue::pop (4,818,181,770 samples, 1.75%)</title><rect x="975.1" y="421" width="20.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="978.11" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_packet_spacing (383,838,380 samples, 0.14%)</title><rect x="1185.5" y="421" width="1.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1188.46" y="431.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="336.7" y="421" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="339.66" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (565,656,560 samples, 0.21%)</title><rect x="960.7" y="421" width="2.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="963.66" y="431.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (50,505,050 samples, 0.02%)</title><rect x="1020.1" y="421" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1023.14" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (191,919,190 samples, 0.07%)</title><rect x="1018.6" y="357" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1021.58" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="782.7" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.67" y="207.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (70,707,070 samples, 0.03%)</title><rect x="1184.2" y="421" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1187.20" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (666,666,660 samples, 0.24%)</title><rect x="972.3" y="405" width="2.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="975.25" y="415.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::get_max_size (101,010,100 samples, 0.04%)</title><rect x="1050.2" y="437" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1053.24" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="197" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="782.8" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.84" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="1019.1" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1022.10" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,515,151,500 samples, 0.55%)</title><rect x="1065.1" y="373" width="6.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1068.12" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="309" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1103.6" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1106.62" y="319.5" ></text>
</g>
<g >
<title>std::ostream::put (2,646,464,620 samples, 0.96%)</title><rect x="741.7" y="437" width="11.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="744.66" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (60,606,060 samples, 0.02%)</title><rect x="782.5" y="437" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="785.54" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned int&gt;, bool&gt; std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (131,313,130 samples, 0.05%)</title><rect x="1037.1" y="373" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1040.14" y="383.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (2,010,100,990 samples, 0.73%)</title><rect x="1003.1" y="437" width="8.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1006.14" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="960.7" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="963.70" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (383,838,380 samples, 0.14%)</title><rect x="1101.8" y="309" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.76" y="319.5" ></text>
</g>
<g >
<title>sim::ECMPHasher::get_hash (1,939,393,920 samples, 0.70%)</title><rect x="1126.4" y="405" width="8.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1129.37" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (222,222,220 samples, 0.08%)</title><rect x="82.8" y="277" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.84" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="319.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="341" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (353,535,350 samples, 0.13%)</title><rect x="82.3" y="325" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.28" y="335.5" ></text>
</g>
<g >
<title>sim::TcpFlow::create_ack (565,656,560 samples, 0.21%)</title><rect x="1033.8" y="389" width="2.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1036.76" y="399.5" ></text>
</g>
<g >
<title>cfree (30,303,030 samples, 0.01%)</title><rect x="1172.6" y="421" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1175.57" y="431.5" ></text>
</g>
<g >
<title>sim::Process::Process (151,515,150 samples, 0.05%)</title><rect x="951.7" y="389" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="954.71" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="1018.8" y="293" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.80" y="303.5" ></text>
</g>
<g >
<title>sim::MetricsStorage::add_record (50,505,050 samples, 0.02%)</title><rect x="1044.1" y="357" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1047.10" y="367.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (363,636,360 samples, 0.13%)</title><rect x="945.4" y="405" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="948.44" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (151,515,150 samples, 0.05%)</title><rect x="936.9" y="181" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.87" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="785.6" y="373" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="788.56" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="293" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (90,909,090 samples, 0.03%)</title><rect x="818.3" y="405" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="821.31" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Arrive::operator (232,323,230 samples, 0.08%)</title><rect x="857.5" y="469" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="860.54" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,505,050 samples, 0.02%)</title><rect x="1018.4" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1021.36" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="936.3" y="245" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.31" y="255.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (616,161,610 samples, 0.22%)</title><rect x="737.2" y="405" width="2.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="740.16" y="415.5" ></text>
</g>
<g >
<title>malloc (363,636,360 samples, 0.13%)</title><rect x="968.2" y="405" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="971.23" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (50,202,019,700 samples, 18.22%)</title><rect x="494.5" y="357" width="215.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="497.54" y="367.5" >[libc.so.6]</text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1040.3" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1043.34" y="335.5" ></text>
</g>
<g >
<title>YAML::Scanner::ScanPlainScalar (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="261" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1192.57" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,919,191,900 samples, 0.70%)</title><rect x="721.2" y="261" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.20" y="271.5" ></text>
</g>
<g >
<title>sim::Host::process (8,252,525,170 samples, 2.99%)</title><rect x="1012.4" y="437" width="35.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1015.44" y="447.5" >si..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30,303,030 samples, 0.01%)</title><rect x="1187.1" y="437" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1190.10" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (202,020,200 samples, 0.07%)</title><rect x="1102.5" y="229" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.54" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (838,383,830 samples, 0.30%)</title><rect x="323.5" y="389" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="326.47" y="399.5" ></text>
</g>
<g >
<title>sim::TcpFlow::generate_data_packet (242,424,240 samples, 0.09%)</title><rect x="1040.5" y="341" width="1.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1043.51" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="213" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="223.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (191,919,190 samples, 0.07%)</title><rect x="1186.1" y="389" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.06" y="399.5" ></text>
</g>
<g >
<title>pthread_once (181,818,180 samples, 0.07%)</title><rect x="716.5" y="405" width="0.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="719.49" y="415.5" ></text>
</g>
<g >
<title>_IO_file_fopen (282,828,280 samples, 0.10%)</title><rect x="782.8" y="389" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="785.80" y="399.5" ></text>
</g>
<g >
<title>void std::deque&lt;sim::Packet, std::allocator&lt;sim::Packet&gt; &gt;::_M_push_back_aux&lt;sim::Packet const&amp;&gt; (40,404,040 samples, 0.01%)</title><rect x="1024.5" y="373" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1027.46" y="383.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (70,707,070 samples, 0.03%)</title><rect x="788.9" y="421" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="791.90" y="431.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::front (282,828,280 samples, 0.10%)</title><rect x="1062.7" y="389" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1065.70" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,303,030,290 samples, 0.47%)</title><rect x="723.8" y="181" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="726.84" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,080,808,060 samples, 0.76%)</title><rect x="720.5" y="373" width="8.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.51" y="383.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::get_flag (70,707,070 samples, 0.03%)</title><rect x="1021.7" y="405" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1024.74" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::optional&lt;sim::MetricsStorage&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (191,919,190 samples, 0.07%)</title><rect x="1042.9" y="341" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1045.93" y="351.5" ></text>
</g>
<g >
<title>sim::Event::Event (40,404,040 samples, 0.01%)</title><rect x="1058.2" y="421" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1061.20" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (131,313,130 samples, 0.05%)</title><rect x="1014.3" y="405" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1017.34" y="415.5" ></text>
</g>
<g >
<title>__default_morecore (90,909,090 samples, 0.03%)</title><rect x="754.4" y="405" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="757.38" y="415.5" ></text>
</g>
<g >
<title>operator new (101,010,100 samples, 0.04%)</title><rect x="1129.5" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.49" y="383.5" ></text>
</g>
<g >
<title>int YAML::RegEx::MatchUnchecked&lt;YAML::StreamCharSource&gt; (30,303,030 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.57" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="1040.7" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.68" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,808,080 samples, 0.03%)</title><rect x="10.2" y="373" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.17" y="383.5" ></text>
</g>
<g >
<title>sim::TcpFlow::Timeout::operator (40,404,040 samples, 0.01%)</title><rect x="1188.9" y="469" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1191.92" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;Time&lt;Nanosecond&gt;, std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;Time&lt;Nanosecond&gt; &gt;, std::allocator&lt;std::pair&lt;Time&lt;Nanosecond&gt; const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (14,646,464,500 samples, 5.32%)</title><rect x="264.7" y="437" width="62.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="267.69" y="447.5" >std::_..</text>
</g>
<g >
<title>sim::SimplePacketQueue::push (30,303,030 samples, 0.01%)</title><rect x="1108.2" y="405" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1111.25" y="415.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_id[abi:cxx11] (60,606,060 samples, 0.02%)</title><rect x="1113.2" y="421" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1116.22" y="431.5" ></text>
</g>
<g >
<title>operator new (383,838,380 samples, 0.14%)</title><rect x="968.1" y="421" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="971.14" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (242,424,240 samples, 0.09%)</title><rect x="817.3" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.27" y="303.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (30,303,030 samples, 0.01%)</title><rect x="1112.1" y="421" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1115.14" y="431.5" ></text>
</g>
<g >
<title>cfree (101,010,100 samples, 0.04%)</title><rect x="820.1" y="469" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="823.13" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,202,020,190 samples, 0.44%)</title><rect x="387.1" y="373" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="390.10" y="383.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (7,030,302,960 samples, 2.55%)</title><rect x="789.2" y="421" width="30.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="792.20" y="431.5" >st..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="782.8" y="341" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.80" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sim::MetricsStorage, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (30,303,030 samples, 0.01%)</title><rect x="755.0" y="373" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="758.03" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.08%)</title><rect x="783.1" y="165" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.10" y="175.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleBlockMap (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="373" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (282,828,280 samples, 0.10%)</title><rect x="936.3" y="277" width="1.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="939.31" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (181,818,180 samples, 0.07%)</title><rect x="817.5" y="181" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.53" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1025.2" y="357" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.15" y="367.5" ></text>
</g>
<g >
<title>fmt::v11::basic_appender&lt;char&gt; fmt::v11::detail::copy_noinline&lt;char, char const*, fmt::v11::basic_appender&lt;char&gt; &gt; (131,313,130 samples, 0.05%)</title><rect x="1181.7" y="373" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1184.70" y="383.5" ></text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.01%)</title><rect x="1047.0" y="341" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1049.96" y="351.5" ></text>
</g>
<g >
<title>malloc (525,252,520 samples, 0.19%)</title><rect x="1169.0" y="405" width="2.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1172.02" y="415.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (191,919,190 samples, 0.07%)</title><rect x="1111.2" y="405" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1114.19" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,969,696,950 samples, 0.71%)</title><rect x="721.0" y="277" width="8.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="723.98" y="287.5" ></text>
</g>
<g >
<title>sim::SendData::operator (2,676,767,650 samples, 0.97%)</title><rect x="1171.7" y="453" width="11.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1174.75" y="463.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="992.4" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="995.41" y="159.5" ></text>
</g>
<g >
<title>sim::Event::operator&gt; (70,707,070 samples, 0.03%)</title><rect x="909.8" y="421" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="912.84" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.01%)</title><rect x="1183.1" y="421" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1186.08" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="1025.2" y="309" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.20" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="165" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="1076.9" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.89" y="239.5" ></text>
</g>
<g >
<title>__uselocale (1,383,838,370 samples, 0.50%)</title><rect x="709.9" y="405" width="5.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="712.87" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="159.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (272,727,270 samples, 0.10%)</title><rect x="1045.5" y="357" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1048.48" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (404,040,400 samples, 0.15%)</title><rect x="82.1" y="341" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="85.06" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="1176.5" y="309" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.50" y="319.5" ></text>
</g>
<g >
<title>sim::FlagManager&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::set_flag (191,919,190 samples, 0.07%)</title><rect x="1035.1" y="373" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1038.06" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (5,909,090,850 samples, 2.14%)</title><rect x="791.3" y="405" width="25.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="794.27" y="415.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (212,121,210 samples, 0.08%)</title><rect x="817.4" y="213" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.40" y="223.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::push (909,090,900 samples, 0.33%)</title><rect x="939.2" y="405" width="3.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="942.21" y="415.5" ></text>
</g>
<g >
<title>operator new (12,939,393,810 samples, 4.70%)</title><rect x="336.8" y="421" width="55.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="339.84" y="431.5" >opera..</text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.02%)</title><rect x="1110.9" y="389" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1113.93" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (131,313,130 samples, 0.05%)</title><rect x="783.4" y="117" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.45" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,909,090,890 samples, 0.69%)</title><rect x="721.2" y="245" width="8.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.24" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="1019.1" y="213" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1022.10" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (30,303,030 samples, 0.01%)</title><rect x="1041.7" y="357" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1044.68" y="367.5" ></text>
</g>
<g >
<title>sim::Link::get_max_to_ingress_queue_size (181,818,180 samples, 0.07%)</title><rect x="1047.9" y="437" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1050.91" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,060,606,040 samples, 0.75%)</title><rect x="69.4" y="405" width="8.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.39" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="754.6" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.55" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="754.9" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.90" y="207.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50,505,050 samples, 0.02%)</title><rect x="1104.1" y="357" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1107.14" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (80,808,080 samples, 0.03%)</title><rect x="1125.7" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1128.68" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="1176.8" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.81" y="143.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (60,606,060 samples, 0.02%)</title><rect x="913.5" y="405" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="916.47" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="1018.8" y="277" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1021.80" y="287.5" ></text>
</g>
<g >
<title>sim::TcpFlow::SendAtTime::operator (909,090,900 samples, 0.33%)</title><rect x="1183.3" y="453" width="3.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1186.34" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (191,919,190 samples, 0.07%)</title><rect x="969.0" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="971.97" y="399.5" ></text>
</g>
<g >
<title>operator new (9,696,969,600 samples, 3.52%)</title><rect x="221.0" y="437" width="41.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="224.04" y="447.5" >ope..</text>
</g>
<g >
<title>malloc (111,111,110 samples, 0.04%)</title><rect x="1107.5" y="341" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1110.51" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (141,414,140 samples, 0.05%)</title><rect x="1035.1" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1038.10" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (131,313,130 samples, 0.05%)</title><rect x="1170.7" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.71" y="399.5" ></text>
</g>
<g >
<title>sim::RoutingModule::next_inlink (1,060,606,050 samples, 0.38%)</title><rect x="1137.3" y="421" width="4.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1140.32" y="431.5" ></text>
</g>
<g >
<title>cfree (151,515,150 samples, 0.05%)</title><rect x="1127.5" y="389" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1130.50" y="399.5" ></text>
</g>
<g >
<title>sim::EventComparator::operator (101,010,100 samples, 0.04%)</title><rect x="947.0" y="405" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="949.99" y="415.5" ></text>
</g>
<g >
<title>pthread_once@plt (30,303,030 samples, 0.01%)</title><rect x="717.3" y="405" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="720.26" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,505,050 samples, 0.02%)</title><rect x="1103.4" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.40" y="191.5" ></text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1126.2" y="405" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.24" y="415.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (60,606,060 samples, 0.02%)</title><rect x="785.8" y="421" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="788.82" y="431.5" ></text>
</g>
<g >
<title>operator new (70,707,070 samples, 0.03%)</title><rect x="1110.9" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1113.89" y="415.5" ></text>
</g>
<g >
<title>sim::ConnectionImpl::send_data (787,878,780 samples, 0.29%)</title><rect x="1038.4" y="373" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1041.43" y="383.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (7,434,343,360 samples, 2.70%)</title><rect x="911.4" y="421" width="31.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="914.35" y="431.5" >si..</text>
</g>
<g >
<title>std::locale::id::_M_id (171,717,170 samples, 0.06%)</title><rect x="739.8" y="405" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="742.80" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="245" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="937.6" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.61" y="159.5" ></text>
</g>
<g >
<title>sim::Link::transmit (7,696,969,620 samples, 2.79%)</title><rect x="963.1" y="437" width="33.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="966.13" y="447.5" >si..</text>
</g>
<g >
<title>sim::Link::schedule_arrival (30,303,030 samples, 0.01%)</title><rect x="1049.8" y="437" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1052.77" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,707,070 samples, 0.03%)</title><rect x="1103.1" y="133" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1106.10" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,444,444,430 samples, 0.52%)</title><rect x="810.3" y="325" width="6.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="813.26" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,616,160 samples, 0.06%)</title><rect x="14.3" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.33" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (80,808,080 samples, 0.03%)</title><rect x="1024.1" y="373" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1027.12" y="383.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_delivery_rate (383,838,380 samples, 0.14%)</title><rect x="1045.1" y="373" width="1.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1048.14" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="1019.0" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1022.01" y="239.5" ></text>
</g>
<g >
<title>sim::Process::~Process (282,828,280 samples, 0.10%)</title><rect x="861.1" y="469" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="864.09" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,080,808,060 samples, 0.76%)</title><rect x="914.8" y="389" width="8.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="917.81" y="399.5" ></text>
</g>
<g >
<title>virtual thunk to sim::RoutingModule::get_id[abi:cxx11] (30,303,030 samples, 0.01%)</title><rect x="1041.5" y="341" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1044.55" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="10.4" y="229" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.39" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="791.8" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="794.79" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (161,616,160 samples, 0.06%)</title><rect x="1102.7" y="213" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.71" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (101,010,100 samples, 0.04%)</title><rect x="1156.8" y="437" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1159.78" y="447.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::add_record (525,252,520 samples, 0.19%)</title><rect x="1017.2" y="373" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1020.15" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (40,404,040 samples, 0.01%)</title><rect x="1077.8" y="357" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1080.75" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="239.5" ></text>
</g>
<g >
<title>operator new (50,505,050 samples, 0.02%)</title><rect x="960.4" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="963.45" y="431.5" ></text>
</g>
<g >
<title>sim::MultiIdMetricsStorage::add_record (242,424,240 samples, 0.09%)</title><rect x="1042.7" y="357" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1045.72" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="782.7" y="165" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.67" y="175.5" ></text>
</g>
<g >
<title>sim::LinksQueueSizeStorage::export_to_files (180,252,523,450 samples, 65.41%)</title><rect x="10.5" y="469" width="771.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.52" y="479.5" >sim::LinksQueueSizeStorage::export_to_files</text>
</g>
<g >
<title>operator new (30,303,030 samples, 0.01%)</title><rect x="1103.6" y="341" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.62" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (515,151,510 samples, 0.19%)</title><rect x="78.4" y="421" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.43" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (30,303,030 samples, 0.01%)</title><rect x="972.1" y="405" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="975.12" y="415.5" ></text>
</g>
<g >
<title>sim::Link::Transmit::~Transmit (40,404,040 samples, 0.01%)</title><rect x="996.9" y="453" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="999.87" y="463.5" ></text>
</g>
<g >
<title>sim::Packet::Packet (40,404,040 samples, 0.01%)</title><rect x="1041.2" y="325" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1044.25" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (6,050,504,990 samples, 2.20%)</title><rect x="755.2" y="453" width="25.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="758.16" y="463.5" >s..</text>
</g>
<g >
<title>sim::MetricsStorage::add_record (252,525,250 samples, 0.09%)</title><rect x="1175.9" y="357" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1178.90" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (151,515,150 samples, 0.05%)</title><rect x="1013.3" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1016.30" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (272,727,270 samples, 0.10%)</title><rect x="13.2" y="325" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.16" y="335.5" ></text>
</g>
<g >
<title>sim::LinkQueue::push (1,080,808,070 samples, 0.39%)</title><rect x="1173.1" y="405" width="4.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1176.09" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (464,646,460 samples, 0.17%)</title><rect x="784.1" y="437" width="2.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="787.09" y="447.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (848,484,840 samples, 0.31%)</title><rect x="1173.6" y="389" width="3.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1176.56" y="399.5" ></text>
</g>
<g >
<title>sim::Host::enqueue_packet (404,040,400 samples, 0.15%)</title><rect x="1022.9" y="389" width="1.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1025.91" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="229" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (171,717,170 samples, 0.06%)</title><rect x="13.6" y="277" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="16.59" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (40,404,040 samples, 0.01%)</title><rect x="782.6" y="421" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="785.62" y="431.5" ></text>
</g>
<g >
<title>sim::LinkQueue::front (454,545,450 samples, 0.16%)</title><rect x="1062.0" y="405" width="1.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1064.96" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (242,424,240 samples, 0.09%)</title><rect x="1141.9" y="421" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1144.94" y="431.5" ></text>
</g>
<g >
<title>sim::PacketNumMonitor::correctify_state (50,505,050 samples, 0.02%)</title><rect x="1036.8" y="373" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1039.83" y="383.5" ></text>
</g>
<g >
<title>writev (2,101,010,080 samples, 0.76%)</title><rect x="720.4" y="389" width="9.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="723.42" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,404,040 samples, 0.01%)</title><rect x="782.6" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="785.62" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (141,414,140 samples, 0.05%)</title><rect x="1102.8" y="197" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.80" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,303,030 samples, 0.01%)</title><rect x="1019.7" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1022.70" y="367.5" ></text>
</g>
<g >
<title>vsnprintf (222,222,220 samples, 0.08%)</title><rect x="740.5" y="405" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="743.54" y="415.5" ></text>
</g>
<g >
<title>sim::Link::arrive (10,818,181,710 samples, 3.93%)</title><rect x="906.6" y="437" width="46.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="909.59" y="447.5" >sim:..</text>
</g>
<g >
<title>write (40,404,040 samples, 0.01%)</title><rect x="782.6" y="373" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="785.62" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (111,111,110 samples, 0.04%)</title><rect x="937.5" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.52" y="271.5" ></text>
</g>
<g >
<title>YAML::SingleDocParser::HandleNode (111,111,110 samples, 0.04%)</title><rect x="1189.5" y="389" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.52" y="399.5" ></text>
</g>
<g >
<title>sim::SimplePacketQueue::pop (505,050,500 samples, 0.18%)</title><rect x="993.6" y="405" width="2.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="996.58" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (40,404,040 samples, 0.01%)</title><rect x="1061.8" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1064.79" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (121,212,120 samples, 0.04%)</title><rect x="787.6" y="421" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="790.60" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,010,100 samples, 0.04%)</title><rect x="1103.0" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.97" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,303,030 samples, 0.01%)</title><rect x="783.9" y="37" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="786.88" y="47.5" ></text>
</g>
<g >
<title>sim::Process::operator (222,222,220 samples, 0.08%)</title><rect x="860.1" y="469" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="863.14" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,909,090 samples, 0.03%)</title><rect x="754.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="757.38" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (70,707,070 samples, 0.03%)</title><rect x="1099.2" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1102.16" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (90,909,090 samples, 0.03%)</title><rect x="942.7" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="945.71" y="351.5" ></text>
</g>
<g >
<title>sim::RoutingModule::get_link_to_destination (1,030,303,020 samples, 0.37%)</title><rect x="1178.3" y="421" width="4.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1181.32" y="431.5" ></text>
</g>
<g >
<title>sim::MetricsCollector::add_queue_size (70,707,070 samples, 0.03%)</title><rect x="943.2" y="421" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="946.19" y="431.5" ></text>
</g>
<g >
<title>sim::Link::get_packet (161,616,160 samples, 0.06%)</title><rect x="1048.7" y="437" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1051.69" y="447.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (40,404,040 samples, 0.01%)</title><rect x="786.2" y="437" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="789.17" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (303,030,300 samples, 0.11%)</title><rect x="1076.3" y="325" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1079.33" y="335.5" ></text>
</g>
</g>
</svg>
